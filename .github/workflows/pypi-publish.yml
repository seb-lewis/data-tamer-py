name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # Extra safety: only run when ref is a version tag
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build

      - name: Verify tag matches version
        run: |
          TAG_NAME="${GITHUB_REF_NAME#v}"
          echo "Tag: $TAG_NAME"
          PY_VER=$(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml","rb"))["project"]["version"])')
          echo "pyproject version: $PY_VER"
          if [ "$TAG_NAME" != "$PY_VER" ]; then
            echo "Error: tag (v$TAG_NAME) does not match pyproject version ($PY_VER)"
            exit 1
          fi

      - name: Build package
        run: python -m build

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted Publishing via OpenID Connect (no API token required)
